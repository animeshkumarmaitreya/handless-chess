{"ast":null,"code":"import { PieceType } from \"../Types\";\nimport { Piece } from \"./Piece\";\nexport class Pawn extends Piece {\n  constructor(position, team, hasMoved, enPassant, possibleMoves = []) {\n    super(position, PieceType.PAWN, team, hasMoved, possibleMoves);\n    this.enPassant = void 0;\n    this.enPassant = enPassant;\n  }\n  clone() {\n    var _this$possibleMoves;\n    return new Pawn(this.position.clone(), this.team, this.hasMoved, this.enPassant, (_this$possibleMoves = this.possibleMoves) === null || _this$possibleMoves === void 0 ? void 0 : _this$possibleMoves.map(m => m.clone()));\n  }\n}","map":{"version":3,"names":["PieceType","Piece","Pawn","constructor","position","team","hasMoved","enPassant","possibleMoves","PAWN","clone","_this$possibleMoves","map","m"],"sources":["/home/animesh/Desktop/SummerDev/Chess-40/src/models/Pawn.ts"],"sourcesContent":["import { PieceType, TeamType } from \"../Types\";\nimport { Piece } from \"./Piece\";\nimport { Position } from \"./Position\";\n\nexport class Pawn extends Piece {\n    enPassant?: boolean;\n    constructor(position: Position, \n        team: TeamType, hasMoved: boolean,\n        enPassant?: boolean,\n        possibleMoves: Position[] = []) {\n        super(position, PieceType.PAWN, team, hasMoved, possibleMoves);\n        this.enPassant = enPassant;\n    }\n\n    clone(): Pawn {\n        return new Pawn(this.position.clone(),\n         this.team, this.hasMoved, this.enPassant, this.possibleMoves?.map(m => m.clone()))\n    }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAkB,UAAU;AAC9C,SAASC,KAAK,QAAQ,SAAS;AAG/B,OAAO,MAAMC,IAAI,SAASD,KAAK,CAAC;EAE5BE,WAAWA,CAACC,QAAkB,EAC1BC,IAAc,EAAEC,QAAiB,EACjCC,SAAmB,EACnBC,aAAyB,GAAG,EAAE,EAAE;IAChC,KAAK,CAACJ,QAAQ,EAAEJ,SAAS,CAACS,IAAI,EAAEJ,IAAI,EAAEC,QAAQ,EAAEE,aAAa,CAAC;IAAC,KALnED,SAAS;IAML,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EAEAG,KAAKA,CAAA,EAAS;IAAA,IAAAC,mBAAA;IACV,OAAO,IAAIT,IAAI,CAAC,IAAI,CAACE,QAAQ,CAACM,KAAK,CAAC,CAAC,EACpC,IAAI,CAACL,IAAI,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,SAAS,GAAAI,mBAAA,GAAE,IAAI,CAACH,aAAa,cAAAG,mBAAA,uBAAlBA,mBAAA,CAAoBC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;EACvF;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}