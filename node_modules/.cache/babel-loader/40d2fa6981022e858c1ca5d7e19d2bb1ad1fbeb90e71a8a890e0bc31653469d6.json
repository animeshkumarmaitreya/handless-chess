{"ast":null,"code":"var _jsxFileName = \"/home/animesh/Desktop/SummerDev/Chess-40/src/Components/Chessboard/chessboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from 'axios';\nimport \"./chessboard.css\";\nimport Tile from \"../Tiles/tile\";\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE } from \"../../Constants\";\nimport { Position } from \"../../models\";\nimport Logbook from \"./logbook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard({\n  playMove,\n  pieces\n}) {\n  _s();\n  const [activePiece, setActivePiece] = useState(null);\n  const [grabPosition, setGrabPosition] = useState(new Position(-1, -1));\n  const [moves, setMoves] = useState([]);\n  const chessboardRef = useRef(null);\n  useEffect(() => {\n    const logs = async () => {\n      let sa = [];\n      const res = await axios.post('https://chess-40-backend.onrender.com/log');\n      for (const key in res.data) {\n        sa.push(res.data[key][\"Log\"]);\n      }\n      setMoves(sa);\n    };\n    logs();\n  }, []);\n  function grabPiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      const grabX = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      setGrabPosition(new Position(grabX, grabY));\n      const x = e.clientX - GRID_SIZE / 2;\n      const y = e.clientY - GRID_SIZE / 2;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      activePiece.style.position = \"absolute\";\n      // Clamp the piece position within the chessboard bounds\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  async function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      const currentPiece = pieces.find(p => p.samePosition(grabPosition));\n      if (currentPiece) {\n        const opponentPiece = pieces.find(p => p.samePosition(new Position(x, y)));\n        const success = playMove(currentPiece.clone(), new Position(x, y));\n        if (success) {\n          const newPosition = new Position(x, y);\n          let moveNotation = \"\";\n          if (opponentPiece) {\n            moveNotation = `${currentPiece.type} takes ${opponentPiece.type} ${positionToChessNotation(newPosition)}`;\n            if (currentPiece.isKing && Math.abs(grabPosition.x - x) > 1) {\n              if (x === 7) {\n                moveNotation = \"O-O\";\n              } else if (x === 0) {\n                moveNotation = \"O-O-O\";\n              }\n            }\n          } else {\n            moveNotation = `${currentPiece.type} ${positionToChessNotation(newPosition)}`;\n            if (currentPiece.isPawn && grabPosition.x !== x) {\n              moveNotation += \" en passant\";\n            }\n          }\n          let url = `https://chess-40-backend.onrender.com/turns?log=${moveNotation}`;\n          const response3 = await axios.get(url);\n          setMoves([...moves, moveNotation]);\n          //UPDATE POSITION IN DB\n          url = `http://localhost:4000/push?fx=${-1}&fy=${-1}&ix=${x}&iy=${y}`;\n          const response = await axios.get(url);\n          url = `http://localhost:4000/push?fx=${x}&fy=${y}&ix=${currentPiece.position.x}&iy=${currentPiece.position.y}`;\n          const response2 = await axios.get(url);\n        } else {\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n\n  //Mapping Function\n  const charToIndex = char => {\n    const charMap = {\n      'a': 0,\n      'b': 1,\n      'c': 2,\n      'd': 3,\n      'e': 4,\n      'f': 5,\n      'g': 6,\n      'h': 7\n    };\n    return charMap[char];\n  };\n\n  //Mapping Function\n  const indexToIndex = char => {\n    const charMap = {\n      '1': 0,\n      '2': 1,\n      '3': 2,\n      '4': 3,\n      '5': 4,\n      '6': 5,\n      '7': 6,\n      '8': 7\n    };\n    return charMap[char];\n  };\n  function selectElementsByBgImage(url) {\n    const elements = document.getElementsByClassName('chess-piece');\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].style.backgroundImage == url) return elements[i];\n    }\n  }\n  const runVoiceCommand = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/run-script');\n      var st = response.data.toString();\n      if (st == \"Invalid input\") {\n        alert(\"Invalid, Please try again\");\n        runVoiceCommand();\n        return;\n      }\n      const initialX = charToIndex(st[0]);\n      const initialY = indexToIndex(st[1]);\n      const finalX = charToIndex(st[st.length - 2]);\n      const finalY = indexToIndex(st[st.length - 1]);\n      const response2 = await axios.post(`http://localhost:4000/getElement?x=${initialX}&y=${initialY}`);\n      const ele = response2.data[0][\"Element\"];\n      const element = selectElementsByBgImage(`url(\"Assets/Images/${ele}.png\")`);\n      const chessboard = chessboardRef.current;\n      if (element && element.classList.contains(\"chess-piece\") && chessboard) {\n        const x = (initialX + 0.5) * GRID_SIZE + chessboard.offsetLeft - GRID_SIZE / 2;\n        const y = (7 - initialY + 0.5) * GRID_SIZE + chessboard.offsetTop - GRID_SIZE / 2;\n        element.style.position = \"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n      }\n      var grabPosition2 = new Position(initialX, initialY);\n      if (chessboard && element) {\n        const x = finalX;\n        const y = finalY;\n        const currentPiece = pieces.find(p => p.samePosition(grabPosition2));\n        if (currentPiece) {\n          const opponentPiece = pieces.find(p => p.samePosition(new Position(x, y)));\n          const success = playMove(currentPiece.clone(), new Position(x, y));\n          if (success) {\n            const newPosition = new Position(x, y);\n            let moveNotation = \"\";\n            if (opponentPiece) {\n              moveNotation = `${currentPiece.type} takes ${opponentPiece.type} ${positionToChessNotation(newPosition)}`;\n              if (currentPiece.isKing && Math.abs(grabPosition2.x - x) > 1) {\n                if (x === 7) {\n                  moveNotation = \"O-O\";\n                } else if (x === 0) {\n                  moveNotation = \"O-O-O\";\n                }\n              }\n            } else {\n              moveNotation = `${currentPiece.type} ${positionToChessNotation(newPosition)}`;\n              if (currentPiece.isPawn && grabPosition2.x !== x) {\n                moveNotation += \" en passant\";\n              }\n            }\n            let url = `http://localhost:4000/turns?log=${moveNotation}`;\n            const response3 = await axios.get(url);\n            setMoves([...moves, moveNotation]);\n            //UPDATE POSITION IN DB\n            url = `http://localhost:4000/push?fx=${-1}&fy=${-1}&ix=${x}&iy=${y}`;\n            const response = await axios.get(url);\n            url = `http://localhost:4000/push?fx=${x}&fy=${y}&ix=${currentPiece.position.x}&iy=${currentPiece.position.y}`;\n            const response2 = await axios.get(url);\n          } else {\n            element.style.position = \"relative\";\n            element.style.removeProperty(\"top\");\n            element.style.removeProperty(\"left\");\n            alert(\"This move is not possible\");\n          }\n        }\n        setActivePiece(null);\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error('Error running voice command:', error);\n    }\n  };\n\n  // Function to convert Position to chess notation (e.g., (4, 1) to \"e2\")\n  const positionToChessNotation = position => {\n    const file = String.fromCharCode(97 + position.x); // 'a' is ASCII 97\n    const rank = position.y + 1;\n    return `${file}${rank}`;\n  };\n\n  // Generating the chessboard grid\n  let board = [];\n  for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\n    for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n      const number = j + i + 2;\n      const piece = pieces.find(p => p.samePosition(new Position(i, j)));\n      let image = piece ? piece.image : undefined;\n      let currentPiece = activePiece != null ? pieces.find(p => p.samePosition(grabPosition)) : undefined;\n      let highlight = currentPiece !== null && currentPiece !== void 0 && currentPiece.possibleMoves ? currentPiece.possibleMoves.some(p => p.samePosition(new Position(i, j))) : false;\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number,\n        highlight: highlight\n      }, `${j},${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranks\",\n        children: VERTICAL_AXIS.map((rank, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rank\",\n          children: 9 - parseInt(rank)\n        }, `rank-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseMove: e => movePiece(e),\n        onMouseDown: e => grabPiece(e),\n        onMouseUp: e => dropPiece(e),\n        id: \"chessboard\",\n        ref: chessboardRef,\n        children: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files\",\n        children: HORIZONTAL_AXIS.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file\",\n          children: file.toUpperCase()\n        }, `file-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runVoiceCommand,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Voice Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logbook, {\n      moves: moves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(Chessboard, \"ARw57kbr23K+h4FdhVZnhf7pq08=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","Tile","VERTICAL_AXIS","HORIZONTAL_AXIS","GRID_SIZE","Position","Logbook","jsxDEV","_jsxDEV","Chessboard","playMove","pieces","_s","activePiece","setActivePiece","grabPosition","setGrabPosition","moves","setMoves","chessboardRef","logs","sa","res","post","key","data","push","grabPiece","e","element","target","chessboard","current","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","x","y","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","samePosition","opponentPiece","success","clone","newPosition","moveNotation","type","positionToChessNotation","isKing","isPawn","url","response3","get","response","response2","removeProperty","charToIndex","char","charMap","indexToIndex","selectElementsByBgImage","elements","document","getElementsByClassName","i","length","backgroundImage","runVoiceCommand","st","toString","alert","initialX","initialY","finalX","finalY","ele","grabPosition2","window","location","reload","error","console","file","String","fromCharCode","rank","board","j","number","piece","image","undefined","highlight","possibleMoves","some","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","index","parseInt","onMouseMove","onMouseDown","onMouseUp","id","ref","toUpperCase","onClick","_c","$RefreshReg$"],"sources":["/home/animesh/Desktop/SummerDev/Chess-40/src/Components/Chessboard/chessboard.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport axios from 'axios';\nimport \"./chessboard.css\";\nimport Tile from \"../Tiles/tile\";\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE } from \"../../Constants\";\nimport { Piece, Position } from \"../../models\";\nimport Logbook from \"./logbook\";\ninterface Props {\n  playMove: (piece: Piece, position: Position) => number;\n  pieces: Piece[];\n}\n\nexport default function Chessboard({ playMove, pieces }: Props) {\n  const [activePiece, setActivePiece] = useState<HTMLElement | null>(null);\n  const [grabPosition, setGrabPosition] = useState<Position>(new Position(-1, -1));\n  const [moves, setMoves] = useState<string[]>([]); \n  const chessboardRef = useRef<HTMLDivElement>(null);\n\n  useEffect(()=>{\n    const logs = async () =>{\n      let sa : string[] = [];\n      const res = await axios.post('https://chess-40-backend.onrender.com/log');\n      for(const key in res.data){\n        sa.push(res.data[key][\"Log\"]);\n      }\n      setMoves(sa);\n    }\n    logs();\n  },[])\n    function grabPiece(e: React.MouseEvent) {\n    const element = e.target as HTMLElement;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      const grabX = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      setGrabPosition(new Position(grabX, grabY));\n\n      const x = e.clientX - GRID_SIZE / 2;\n      const y = e.clientY - GRID_SIZE / 2;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n\n  function movePiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      activePiece.style.position = \"absolute\";\n      // Clamp the piece position within the chessboard bounds\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  async function dropPiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      const currentPiece = pieces.find((p) => p.samePosition(grabPosition));\n      if (currentPiece) {\n        const opponentPiece = pieces.find((p) => p.samePosition(new Position(x, y)));\n        const success = playMove(currentPiece.clone(), new Position(x, y));\n\n        if (success) {\n          const newPosition = new Position(x, y);\n          let moveNotation = \"\";\n          if (opponentPiece) {\n            moveNotation = `${currentPiece.type} takes ${opponentPiece.type} ${positionToChessNotation(newPosition)}`;\n            if (currentPiece.isKing && Math.abs(grabPosition.x - x) > 1) {\n              if (x === 7) {\n                moveNotation=\"O-O\";\n              } \n              else if (x === 0) {\n                moveNotation = \"O-O-O\";\n              }\n            }\n          } \n          else {\n            moveNotation = `${currentPiece.type} ${positionToChessNotation(newPosition)}`;\n            if (currentPiece.isPawn && grabPosition.x!==x) {\n              moveNotation += \" en passant\";\n            }\n          }\n          let url = `https://chess-40-backend.onrender.com/turns?log=${moveNotation}`;\n          const response3 = await axios.get<{ output: string, error: string }>(url);\n          setMoves([...moves, moveNotation]);\n          //UPDATE POSITION IN DB\n          url = `http://localhost:4000/push?fx=${-1}&fy=${-1}&ix=${x}&iy=${y}`;\n          const response = await axios.get<{ output: string, error: string }>(url);\n          url = `http://localhost:4000/push?fx=${x}&fy=${y}&ix=${currentPiece.position.x}&iy=${currentPiece.position.y}`;\n          const response2 = await axios.get<{ output: string, error: string }>(url);\n        }\n        else{\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n  \n      setActivePiece(null);\n    }\n  }\n\n  //Mapping Function\n  const charToIndex = (char: string): number => {\n    const charMap: { [key: string]: number } = { 'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7 };\n    return charMap[char];\n  }\n\n  //Mapping Function\n  const indexToIndex = (char: string): number => {\n    const charMap: { [key: string]: number } = { '1': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7 };\n    return charMap[char];\n  }\n\n  function selectElementsByBgImage(url : string) {\n    const elements = document.getElementsByClassName('chess-piece') as HTMLCollectionOf<HTMLElement>; \n    for(let i=0;i<elements.length;i++){\n      if(elements[i].style.backgroundImage==url) return elements[i];\n    }\n}\n\n  const runVoiceCommand = async () => {\n    try {\n      const response = await axios.post<{ piece: string, from: string, to: string }>('http://localhost:5000/run-script');\n      var st = response.data.toString();\n      if(st==\"Invalid input\"){\n        alert(\"Invalid, Please try again\");\n        runVoiceCommand();\n        return;\n      }\n      const initialX = charToIndex(st[0]);\n      const initialY = indexToIndex(st[1]);\n      const finalX = charToIndex(st[st.length-2]);\n      const finalY = indexToIndex(st[st.length-1]);\n      const response2 = await axios.post(`http://localhost:4000/getElement?x=${initialX}&y=${initialY}`);\n      const ele = response2.data[0][\"Element\"];\n      const element = selectElementsByBgImage(`url(\"Assets/Images/${ele}.png\")`);\n        const chessboard = chessboardRef.current;\n        if (element && element.classList.contains(\"chess-piece\") && chessboard) {\n          const x = ((initialX + 0.5) * GRID_SIZE) + chessboard.offsetLeft - GRID_SIZE / 2;\n          const y = ((7 -initialY + 0.5) * GRID_SIZE) + chessboard.offsetTop - GRID_SIZE / 2;\n          element.style.position = \"absolute\";\n          element.style.left = `${x}px`;\n          element.style.top = `${y}px`;\n        }\n        var grabPosition2 = new Position(initialX,initialY);\n        if (chessboard && element) {\n          const x = finalX;\n          const y = finalY;\n          const currentPiece = pieces.find((p) => p.samePosition(grabPosition2));\n          if (currentPiece) {\n            const opponentPiece = pieces.find((p) => p.samePosition(new Position(x, y)));\n            const success = playMove(currentPiece.clone(), new Position(x, y));\n            if (success) {\n              const newPosition = new Position(x, y);\n              let moveNotation = \"\";\n              if (opponentPiece) {\n                moveNotation = `${currentPiece.type} takes ${opponentPiece.type} ${positionToChessNotation(newPosition)}`;\n                if (currentPiece.isKing && Math.abs(grabPosition2.x - x) > 1) {\n                  if (x === 7) {\n                    moveNotation=\"O-O\";\n                  } \n                  else if (x === 0) {\n                    moveNotation = \"O-O-O\";\n                  }\n                }\n              } \n              else {\n                moveNotation = `${currentPiece.type} ${positionToChessNotation(newPosition)}`;\n                if (currentPiece.isPawn && grabPosition2.x!==x) {\n                  moveNotation += \" en passant\";\n                }\n              }\n              let url = `http://localhost:4000/turns?log=${moveNotation}`;\n              const response3 = await axios.get<{ output: string, error: string }>(url);\n              setMoves([...moves, moveNotation]);\n              //UPDATE POSITION IN DB\n              url = `http://localhost:4000/push?fx=${-1}&fy=${-1}&ix=${x}&iy=${y}`;\n              const response = await axios.get<{ output: string, error: string }>(url);\n              url = `http://localhost:4000/push?fx=${x}&fy=${y}&ix=${currentPiece.position.x}&iy=${currentPiece.position.y}`;\n              const response2 = await axios.get<{ output: string, error: string }>(url);\n            }\n            else{\n              element.style.position = \"relative\";\n              element.style.removeProperty(\"top\");\n              element.style.removeProperty(\"left\");\n              alert(\"This move is not possible\");\n            }\n          }\n          setActivePiece(null);\n        }\n        window.location.reload();\n      } catch (error) {\n        console.error('Error running voice command:', error);\n      }\n  };\n\n  // Function to convert Position to chess notation (e.g., (4, 1) to \"e2\")\n  const positionToChessNotation = (position: Position): string => {\n    const file = String.fromCharCode(97 + position.x); // 'a' is ASCII 97\n    const rank = position.y + 1;\n    return `${file}${rank}`;\n  };\n\n  // Generating the chessboard grid\n  let board = [];\n  for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\n    for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n      const number = j + i + 2;\n      const piece = pieces.find((p) => p.samePosition(new Position(i, j)));\n      let image = piece ? piece.image : undefined;\n\n      let currentPiece = activePiece != null ? pieces.find(p => p.samePosition(grabPosition)) : undefined;\n      let highlight = currentPiece?.possibleMoves ? currentPiece.possibleMoves.some(p => p.samePosition(new Position(i, j))) : false;\n\n      board.push(<Tile key={`${j},${i}`} image={image} number={number} highlight={highlight} />);\n    }\n  }\n\n  return (\n    <div className=\"layout\">\n      <div className=\"board\">\n        <div className=\"ranks\">\n          {VERTICAL_AXIS.map((rank,index) => (\n              <div key={`rank-${index}`} className=\"rank\">\n                {9-parseInt(rank)}\n              </div>\n            ))}\n        </div>\n        <div\n          onMouseMove={(e) => movePiece(e)}\n          onMouseDown={(e) => grabPiece(e)}\n          onMouseUp={(e) => dropPiece(e)}\n          id=\"chessboard\"\n          ref={chessboardRef}\n        >\n          {board}\n        </div>\n        <div className=\"files\">\n          {HORIZONTAL_AXIS.map((file,index) => (\n            <div key={`file-${index}`} className=\"file\">\n              {file.toUpperCase()}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"voice\">\n        <button onClick={runVoiceCommand}>\n          <span>Voice Control</span>\n        </button>\n      </div>\n      <Logbook moves={moves} />\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,aAAa,EAAEC,eAAe,EAAEC,SAAS,QAAQ,iBAAiB;AAC3E,SAAgBC,QAAQ,QAAQ,cAAc;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhC,eAAe,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAqB,IAAI,CAAC;EACxE,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAW,IAAIM,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChF,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAMoB,aAAa,GAAGrB,MAAM,CAAiB,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAI;IACZ,MAAMuB,IAAI,GAAG,MAAAA,CAAA,KAAW;MACtB,IAAIC,EAAa,GAAG,EAAE;MACtB,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,2CAA2C,CAAC;MACzE,KAAI,MAAMC,GAAG,IAAIF,GAAG,CAACG,IAAI,EAAC;QACxBJ,EAAE,CAACK,IAAI,CAACJ,GAAG,CAACG,IAAI,CAACD,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;MAC/B;MACAN,QAAQ,CAACG,EAAE,CAAC;IACd,CAAC;IACDD,IAAI,CAAC,CAAC;EACR,CAAC,EAAC,EAAE,CAAC;EACH,SAASO,SAASA,CAACC,CAAmB,EAAE;IACxC,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAqB;IACvC,MAAMC,UAAU,GAAGZ,aAAa,CAACa,OAAO;IACxC,IAAIH,OAAO,CAACI,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,IAAIH,UAAU,EAAE;MAC3D,MAAMI,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACT,CAAC,CAACU,OAAO,GAAGP,UAAU,CAACQ,UAAU,IAAInC,SAAS,CAAC;MACzE,MAAMoC,KAAK,GAAGJ,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,IAAI,CAAC,CAACd,CAAC,CAACe,OAAO,GAAGZ,UAAU,CAACa,SAAS,GAAG,GAAG,IAAIxC,SAAS,CAAC,CAAC;MACvFY,eAAe,CAAC,IAAIX,QAAQ,CAAC8B,KAAK,EAAEK,KAAK,CAAC,CAAC;MAE3C,MAAMK,CAAC,GAAGjB,CAAC,CAACU,OAAO,GAAGlC,SAAS,GAAG,CAAC;MACnC,MAAM0C,CAAC,GAAGlB,CAAC,CAACe,OAAO,GAAGvC,SAAS,GAAG,CAAC;MACnCyB,OAAO,CAACkB,KAAK,CAACC,QAAQ,GAAG,UAAU;MACnCnB,OAAO,CAACkB,KAAK,CAACE,IAAI,GAAG,GAAGJ,CAAC,IAAI;MAC7BhB,OAAO,CAACkB,KAAK,CAACG,GAAG,GAAG,GAAGJ,CAAC,IAAI;MAC5BhC,cAAc,CAACe,OAAO,CAAC;IACzB;EACF;EAEA,SAASsB,SAASA,CAACvB,CAAmB,EAAE;IACtC,MAAMG,UAAU,GAAGZ,aAAa,CAACa,OAAO;IACxC,IAAInB,WAAW,IAAIkB,UAAU,EAAE;MAC7B,MAAMqB,IAAI,GAAGrB,UAAU,CAACQ,UAAU,GAAG,EAAE;MACvC,MAAMc,IAAI,GAAGtB,UAAU,CAACa,SAAS,GAAG,EAAE;MACtC,MAAMU,IAAI,GAAGvB,UAAU,CAACQ,UAAU,GAAGR,UAAU,CAACwB,WAAW,GAAG,EAAE;MAChE,MAAMC,IAAI,GAAGzB,UAAU,CAACa,SAAS,GAAGb,UAAU,CAAC0B,YAAY,GAAG,EAAE;MAChE,MAAMZ,CAAC,GAAGjB,CAAC,CAACU,OAAO,GAAG,EAAE;MACxB,MAAMQ,CAAC,GAAGlB,CAAC,CAACe,OAAO,GAAG,EAAE;MACxB9B,WAAW,CAACkC,KAAK,CAACC,QAAQ,GAAG,UAAU;MACvC;MACA,IAAIH,CAAC,GAAGO,IAAI,EAAE;QACZvC,WAAW,CAACkC,KAAK,CAACE,IAAI,GAAG,GAAGG,IAAI,IAAI;MACtC,CAAC,MAAM,IAAIP,CAAC,GAAGS,IAAI,EAAE;QACnBzC,WAAW,CAACkC,KAAK,CAACE,IAAI,GAAG,GAAGK,IAAI,IAAI;MACtC,CAAC,MAAM;QACLzC,WAAW,CAACkC,KAAK,CAACE,IAAI,GAAG,GAAGJ,CAAC,IAAI;MACnC;MAEA,IAAIC,CAAC,GAAGO,IAAI,EAAE;QACZxC,WAAW,CAACkC,KAAK,CAACG,GAAG,GAAG,GAAGG,IAAI,IAAI;MACrC,CAAC,MAAM,IAAIP,CAAC,GAAGU,IAAI,EAAE;QACnB3C,WAAW,CAACkC,KAAK,CAACG,GAAG,GAAG,GAAGM,IAAI,IAAI;MACrC,CAAC,MAAM;QACL3C,WAAW,CAACkC,KAAK,CAACG,GAAG,GAAG,GAAGJ,CAAC,IAAI;MAClC;IACF;EACF;EAEA,eAAeY,SAASA,CAAC9B,CAAmB,EAAE;IAC5C,MAAMG,UAAU,GAAGZ,aAAa,CAACa,OAAO;IACxC,IAAInB,WAAW,IAAIkB,UAAU,EAAE;MAC7B,MAAMc,CAAC,GAAGT,IAAI,CAACC,KAAK,CAAC,CAACT,CAAC,CAACU,OAAO,GAAGP,UAAU,CAACQ,UAAU,IAAInC,SAAS,CAAC;MACrE,MAAM0C,CAAC,GAAGV,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,IAAI,CAAC,CAACd,CAAC,CAACe,OAAO,GAAGZ,UAAU,CAACa,SAAS,GAAG,GAAG,IAAIxC,SAAS,CAAC,CAAC;MACnF,MAAMuD,YAAY,GAAGhD,MAAM,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC/C,YAAY,CAAC,CAAC;MACrE,IAAI4C,YAAY,EAAE;QAChB,MAAMI,aAAa,GAAGpD,MAAM,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC,IAAIzD,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;QAC5E,MAAMkB,OAAO,GAAGtD,QAAQ,CAACiD,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,IAAI5D,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC,CAAC;QAElE,IAAIkB,OAAO,EAAE;UACX,MAAME,WAAW,GAAG,IAAI7D,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC;UACtC,IAAIqB,YAAY,GAAG,EAAE;UACrB,IAAIJ,aAAa,EAAE;YACjBI,YAAY,GAAG,GAAGR,YAAY,CAACS,IAAI,UAAUL,aAAa,CAACK,IAAI,IAAIC,uBAAuB,CAACH,WAAW,CAAC,EAAE;YACzG,IAAIP,YAAY,CAACW,MAAM,IAAIlC,IAAI,CAACK,GAAG,CAAC1B,YAAY,CAAC8B,CAAC,GAAGA,CAAC,CAAC,GAAG,CAAC,EAAE;cAC3D,IAAIA,CAAC,KAAK,CAAC,EAAE;gBACXsB,YAAY,GAAC,KAAK;cACpB,CAAC,MACI,IAAItB,CAAC,KAAK,CAAC,EAAE;gBAChBsB,YAAY,GAAG,OAAO;cACxB;YACF;UACF,CAAC,MACI;YACHA,YAAY,GAAG,GAAGR,YAAY,CAACS,IAAI,IAAIC,uBAAuB,CAACH,WAAW,CAAC,EAAE;YAC7E,IAAIP,YAAY,CAACY,MAAM,IAAIxD,YAAY,CAAC8B,CAAC,KAAGA,CAAC,EAAE;cAC7CsB,YAAY,IAAI,aAAa;YAC/B;UACF;UACA,IAAIK,GAAG,GAAG,mDAAmDL,YAAY,EAAE;UAC3E,MAAMM,SAAS,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;UACzEtD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEkD,YAAY,CAAC,CAAC;UAClC;UACAK,GAAG,GAAG,iCAAiC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO3B,CAAC,OAAOC,CAAC,EAAE;UACpE,MAAM6B,QAAQ,GAAG,MAAM3E,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;UACxEA,GAAG,GAAG,iCAAiC3B,CAAC,OAAOC,CAAC,OAAOa,YAAY,CAACX,QAAQ,CAACH,CAAC,OAAOc,YAAY,CAACX,QAAQ,CAACF,CAAC,EAAE;UAC9G,MAAM8B,SAAS,GAAG,MAAM5E,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;QAC3E,CAAC,MACG;UACF3D,WAAW,CAACkC,KAAK,CAACC,QAAQ,GAAG,UAAU;UACvCnC,WAAW,CAACkC,KAAK,CAAC8B,cAAc,CAAC,KAAK,CAAC;UACvChE,WAAW,CAACkC,KAAK,CAAC8B,cAAc,CAAC,MAAM,CAAC;QAC1C;MACF;MAEA/D,cAAc,CAAC,IAAI,CAAC;IACtB;EACF;;EAEA;EACA,MAAMgE,WAAW,GAAIC,IAAY,IAAa;IAC5C,MAAMC,OAAkC,GAAG;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE;IAAE,CAAC;IAC7G,OAAOA,OAAO,CAACD,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAME,YAAY,GAAIF,IAAY,IAAa;IAC7C,MAAMC,OAAkC,GAAG;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE,CAAC;MAAE,GAAG,EAAE;IAAE,CAAC;IAC7G,OAAOA,OAAO,CAACD,IAAI,CAAC;EACtB,CAAC;EAED,SAASG,uBAAuBA,CAACV,GAAY,EAAE;IAC7C,MAAMW,QAAQ,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,aAAa,CAAkC;IAChG,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,QAAQ,CAACI,MAAM,EAACD,CAAC,EAAE,EAAC;MAChC,IAAGH,QAAQ,CAACG,CAAC,CAAC,CAACvC,KAAK,CAACyC,eAAe,IAAEhB,GAAG,EAAE,OAAOW,QAAQ,CAACG,CAAC,CAAC;IAC/D;EACJ;EAEE,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAM3E,KAAK,CAACuB,IAAI,CAA8C,kCAAkC,CAAC;MAClH,IAAImE,EAAE,GAAGf,QAAQ,CAAClD,IAAI,CAACkE,QAAQ,CAAC,CAAC;MACjC,IAAGD,EAAE,IAAE,eAAe,EAAC;QACrBE,KAAK,CAAC,2BAA2B,CAAC;QAClCH,eAAe,CAAC,CAAC;QACjB;MACF;MACA,MAAMI,QAAQ,GAAGf,WAAW,CAACY,EAAE,CAAC,CAAC,CAAC,CAAC;MACnC,MAAMI,QAAQ,GAAGb,YAAY,CAACS,EAAE,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMK,MAAM,GAAGjB,WAAW,CAACY,EAAE,CAACA,EAAE,CAACH,MAAM,GAAC,CAAC,CAAC,CAAC;MAC3C,MAAMS,MAAM,GAAGf,YAAY,CAACS,EAAE,CAACA,EAAE,CAACH,MAAM,GAAC,CAAC,CAAC,CAAC;MAC5C,MAAMX,SAAS,GAAG,MAAM5E,KAAK,CAACuB,IAAI,CAAC,sCAAsCsE,QAAQ,MAAMC,QAAQ,EAAE,CAAC;MAClG,MAAMG,GAAG,GAAGrB,SAAS,CAACnD,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;MACxC,MAAMI,OAAO,GAAGqD,uBAAuB,CAAC,sBAAsBe,GAAG,QAAQ,CAAC;MACxE,MAAMlE,UAAU,GAAGZ,aAAa,CAACa,OAAO;MACxC,IAAIH,OAAO,IAAIA,OAAO,CAACI,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,IAAIH,UAAU,EAAE;QACtE,MAAMc,CAAC,GAAI,CAACgD,QAAQ,GAAG,GAAG,IAAIzF,SAAS,GAAI2B,UAAU,CAACQ,UAAU,GAAGnC,SAAS,GAAG,CAAC;QAChF,MAAM0C,CAAC,GAAI,CAAC,CAAC,GAAEgD,QAAQ,GAAG,GAAG,IAAI1F,SAAS,GAAI2B,UAAU,CAACa,SAAS,GAAGxC,SAAS,GAAG,CAAC;QAClFyB,OAAO,CAACkB,KAAK,CAACC,QAAQ,GAAG,UAAU;QACnCnB,OAAO,CAACkB,KAAK,CAACE,IAAI,GAAG,GAAGJ,CAAC,IAAI;QAC7BhB,OAAO,CAACkB,KAAK,CAACG,GAAG,GAAG,GAAGJ,CAAC,IAAI;MAC9B;MACA,IAAIoD,aAAa,GAAG,IAAI7F,QAAQ,CAACwF,QAAQ,EAACC,QAAQ,CAAC;MACnD,IAAI/D,UAAU,IAAIF,OAAO,EAAE;QACzB,MAAMgB,CAAC,GAAGkD,MAAM;QAChB,MAAMjD,CAAC,GAAGkD,MAAM;QAChB,MAAMrC,YAAY,GAAGhD,MAAM,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAACoC,aAAa,CAAC,CAAC;QACtE,IAAIvC,YAAY,EAAE;UAChB,MAAMI,aAAa,GAAGpD,MAAM,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC,IAAIzD,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;UAC5E,MAAMkB,OAAO,GAAGtD,QAAQ,CAACiD,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,IAAI5D,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC,CAAC;UAClE,IAAIkB,OAAO,EAAE;YACX,MAAME,WAAW,GAAG,IAAI7D,QAAQ,CAACwC,CAAC,EAAEC,CAAC,CAAC;YACtC,IAAIqB,YAAY,GAAG,EAAE;YACrB,IAAIJ,aAAa,EAAE;cACjBI,YAAY,GAAG,GAAGR,YAAY,CAACS,IAAI,UAAUL,aAAa,CAACK,IAAI,IAAIC,uBAAuB,CAACH,WAAW,CAAC,EAAE;cACzG,IAAIP,YAAY,CAACW,MAAM,IAAIlC,IAAI,CAACK,GAAG,CAACyD,aAAa,CAACrD,CAAC,GAAGA,CAAC,CAAC,GAAG,CAAC,EAAE;gBAC5D,IAAIA,CAAC,KAAK,CAAC,EAAE;kBACXsB,YAAY,GAAC,KAAK;gBACpB,CAAC,MACI,IAAItB,CAAC,KAAK,CAAC,EAAE;kBAChBsB,YAAY,GAAG,OAAO;gBACxB;cACF;YACF,CAAC,MACI;cACHA,YAAY,GAAG,GAAGR,YAAY,CAACS,IAAI,IAAIC,uBAAuB,CAACH,WAAW,CAAC,EAAE;cAC7E,IAAIP,YAAY,CAACY,MAAM,IAAI2B,aAAa,CAACrD,CAAC,KAAGA,CAAC,EAAE;gBAC9CsB,YAAY,IAAI,aAAa;cAC/B;YACF;YACA,IAAIK,GAAG,GAAG,mCAAmCL,YAAY,EAAE;YAC3D,MAAMM,SAAS,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;YACzEtD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEkD,YAAY,CAAC,CAAC;YAClC;YACAK,GAAG,GAAG,iCAAiC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO3B,CAAC,OAAOC,CAAC,EAAE;YACpE,MAAM6B,QAAQ,GAAG,MAAM3E,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;YACxEA,GAAG,GAAG,iCAAiC3B,CAAC,OAAOC,CAAC,OAAOa,YAAY,CAACX,QAAQ,CAACH,CAAC,OAAOc,YAAY,CAACX,QAAQ,CAACF,CAAC,EAAE;YAC9G,MAAM8B,SAAS,GAAG,MAAM5E,KAAK,CAAC0E,GAAG,CAAoCF,GAAG,CAAC;UAC3E,CAAC,MACG;YACF3C,OAAO,CAACkB,KAAK,CAACC,QAAQ,GAAG,UAAU;YACnCnB,OAAO,CAACkB,KAAK,CAAC8B,cAAc,CAAC,KAAK,CAAC;YACnChD,OAAO,CAACkB,KAAK,CAAC8B,cAAc,CAAC,MAAM,CAAC;YACpCe,KAAK,CAAC,2BAA2B,CAAC;UACpC;QACF;QACA9E,cAAc,CAAC,IAAI,CAAC;MACtB;MACAqF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;;EAED;EACA,MAAMjC,uBAAuB,GAAIrB,QAAkB,IAAa;IAC9D,MAAMwD,IAAI,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAG1D,QAAQ,CAACH,CAAC,CAAC,CAAC,CAAC;IACnD,MAAM8D,IAAI,GAAG3D,QAAQ,CAACF,CAAC,GAAG,CAAC;IAC3B,OAAO,GAAG0D,IAAI,GAAGG,IAAI,EAAE;EACzB,CAAC;;EAED;EACA,IAAIC,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG3G,aAAa,CAACqF,MAAM,GAAG,CAAC,EAAEsB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAClD,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnF,eAAe,CAACoF,MAAM,EAAED,CAAC,EAAE,EAAE;MAC/C,MAAMwB,MAAM,GAAGD,CAAC,GAAGvB,CAAC,GAAG,CAAC;MACxB,MAAMyB,KAAK,GAAGpG,MAAM,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC,IAAIzD,QAAQ,CAACiF,CAAC,EAAEuB,CAAC,CAAC,CAAC,CAAC;MACpE,IAAIG,KAAK,GAAGD,KAAK,GAAGA,KAAK,CAACC,KAAK,GAAGC,SAAS;MAE3C,IAAItD,YAAY,GAAG9C,WAAW,IAAI,IAAI,GAAGF,MAAM,CAACiD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC/C,YAAY,CAAC,CAAC,GAAGkG,SAAS;MACnG,IAAIC,SAAS,GAAGvD,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEwD,aAAa,GAAGxD,YAAY,CAACwD,aAAa,CAACC,IAAI,CAACvD,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC,IAAIzD,QAAQ,CAACiF,CAAC,EAAEuB,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;MAE9HD,KAAK,CAAClF,IAAI,eAAClB,OAAA,CAACP,IAAI;QAAmB+G,KAAK,EAAEA,KAAM;QAACF,MAAM,EAAEA,MAAO;QAACI,SAAS,EAAEA;MAAU,GAAhE,GAAGL,CAAC,IAAIvB,CAAC,EAAE;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuD,CAAC,CAAC;IAC5F;EACF;EAEA,oBACEhH,OAAA;IAAKiH,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBlH,OAAA;MAAKiH,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlH,OAAA;QAAKiH,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBxH,aAAa,CAACyH,GAAG,CAAC,CAAChB,IAAI,EAACiB,KAAK,kBAC1BpH,OAAA;UAA2BiH,SAAS,EAAC,MAAM;UAAAC,QAAA,EACxC,CAAC,GAACG,QAAQ,CAAClB,IAAI;QAAC,GADT,QAAQiB,KAAK,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNhH,OAAA;QACEsH,WAAW,EAAGlG,CAAC,IAAKuB,SAAS,CAACvB,CAAC,CAAE;QACjCmG,WAAW,EAAGnG,CAAC,IAAKD,SAAS,CAACC,CAAC,CAAE;QACjCoG,SAAS,EAAGpG,CAAC,IAAK8B,SAAS,CAAC9B,CAAC,CAAE;QAC/BqG,EAAE,EAAC,YAAY;QACfC,GAAG,EAAE/G,aAAc;QAAAuG,QAAA,EAElBd;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNhH,OAAA;QAAKiH,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBvH,eAAe,CAACwH,GAAG,CAAC,CAACnB,IAAI,EAACoB,KAAK,kBAC9BpH,OAAA;UAA2BiH,SAAS,EAAC,MAAM;UAAAC,QAAA,EACxClB,IAAI,CAAC2B,WAAW,CAAC;QAAC,GADX,QAAQP,KAAK,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhH,OAAA;MAAKiH,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBlH,OAAA;QAAQ4H,OAAO,EAAE3C,eAAgB;QAAAiC,QAAA,eAC/BlH,OAAA;UAAAkH,QAAA,EAAM;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNhH,OAAA,CAACF,OAAO;MAACW,KAAK,EAAEA;IAAM;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAAC5G,EAAA,CAzQuBH,UAAU;AAAA4H,EAAA,GAAV5H,UAAU;AAAA,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}